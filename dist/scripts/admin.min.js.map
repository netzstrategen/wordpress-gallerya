{"version":3,"sources":["../assets/scripts/admin.js"],"names":["$","renderMediaUploader","variation_id","file_frame","undefined","open","wp","media","frames","frame","state","multiple","library","type","on","concat","remove","e","attachments","get","map","attachment","toJSON","images","item","image_id","attributes","id","thumbnail_url","sizes","thumbnail","url","ajax","dataType","gallerya_admin","ajaxurl","data","action","nonce","success","response","forEach","append","console","error","this","$this","hasClass","css","addClass","jQuery"],"mappings":"CAAA,SAAWA,GACT,QAASC,GAAoBC,GAC3B,GAAIC,EAEJ,OAAmBC,UAAfD,MACFA,GAAWE,QAKbF,EAAaG,GAAGC,MAAMC,OAAOL,WAAaG,GAAGC,OAC3CE,MAAO,OACPC,MAAO,SACPC,UAAU,EACVC,SACEC,KAAM,WAIVV,EAAWW,GAAG,OAAQ,WAEpBd,EAAC,sBAAAe,OAAuBb,EAAvB,4CAA8Ec,WAGjFb,EAAWW,GAAG,SAAU,SAAUG,GAEhC,GAAMC,GAAcf,EAAWO,QAAQS,IAAI,aAAaC,IACtD,SAAUC,GAER,MADAA,GAAWC,SACJD,IAGLE,EAASL,EAAYE,IAAI,SAAUI,GACvC,OACEC,SAAUD,EAAKE,WAAWC,GAC1BC,cAAeJ,EAAKE,WAAWG,MAAMC,UAAUC,MAKnD/B,GAAEgC,MACAnB,KAAM,OACNoB,SAAU,OACVF,IAAKG,eAAeC,QACpBC,MACEC,OAAQ,+BACRC,MAAOJ,eAAeI,MACtBpC,aAAcA,EACdqB,OAAQA,GAEVgB,QAAS,SAAUC,GAEbA,IAAY,IAASA,EAASD,QAChCC,EAASjB,OAAOkB,QAAQ,SAAAjB,GACtBxB,EAAC,sBAAAe,OAAuByB,EAAStC,aAAhC,gCAA2EwC,OAA5E,sCAAA3B,OAEkByB,EAAStC,aAF3B,WAAAa,OAEiDS,EAAKC,SAFtD,wFAAAV,OAImBS,EAAKC,SAJxB,0CAAAV,OAKuByB,EAAStC,aALhC,kDAAAa,OAOcS,EAAKI,cAPnB,gCAYFe,QAAQC,MAAMJ,EAASJ,eAQ/BjC,GAAWE,QAGbL,EAAE,6BAA6Bc,GAAG,gCAAiC,WAEjEd,EAAE,sBAAsBc,GAAG,QAAS,gCAAiC,WACnE,GAAMZ,GAAeF,EAAE6C,MAAMT,KAAK,eAElCpC,GAAC,sBAAAe,OAAuBb,EAAvB,gCAAkEwC,OACjE,oFAIFzC,EAAoBC,KAItBF,EAAE,sBAAsBc,GAAG,QAAS,4BAA6B,WAC/D,GAAMgC,GAAQ9C,EAAE6C,KAGdC,GAAMC,SAAS,mCACfD,EAAMC,SAAS,cAKjBD,EAAME,IAAI,UAAW,OACrBF,EAAMG,SAAS,YAEfjD,EAAEgC,MACAnB,KAAM,OACNoB,SAAU,OACVF,IAAKG,eAAeC,QACpBC,MACEC,OAAQ,kCACRC,MAAOJ,eAAeI,MACtBpC,aAAc4C,EAAMV,KAAK,gBACzBX,SAAUqB,EAAMV,KAAK,aAEvBG,QAAS,SAAUC,GACbA,IAAY,IAASA,EAASD,QAChCvC,EAAC,cAAAe,OAAeyB,EAAStC,aAAxB,WAAAa,OAA8CyB,EAASf,WAAYT,SAGpE2B,QAAQC,MAAMJ,EAASJ,eAOhCc","file":"admin.min.js","sourcesContent":["(function ($) {\n  function renderMediaUploader(variation_id) {\n    let file_frame;\n\n    if (file_frame !== undefined) {\n      file_frame.open();\n      return;\n    }\n\n    // Prepare an instance of the wp media frame.\n    file_frame = wp.media.frames.file_frame = wp.media({\n      frame: 'post',\n      state: 'insert',\n      multiple: true,\n      library: {\n        type: 'image',\n      },\n    });\n\n    file_frame.on('open', function () {\n      // Remove the placeholder image.\n      $(`#variation_gallery_${variation_id} .variation_gallery__image--placeholder`).remove();\n    });\n\n    file_frame.on('insert', function (e) {\n      // Retrieve the selected images data returned from the Media Uploader.\n      const attachments = file_frame.state().get('selection').map(\n        function (attachment) {\n          attachment.toJSON();\n          return attachment;\n      });\n\n      const images = attachments.map(function (item) {\n        return {\n          image_id: item.attributes.id,\n          thumbnail_url: item.attributes.sizes.thumbnail.url,\n        };\n      });\n\n      // Add the selected images to the variation gallery.\n      $.ajax({\n        type: 'post',\n        dataType: 'json',\n        url: gallerya_admin.ajaxurl,\n        data: {\n          action: 'gallerya_add_variation_image',\n          nonce: gallerya_admin.nonce,\n          variation_id: variation_id,\n          images: images,\n        },\n        success: function (response) {\n          // Append additional product images.\n          if (response && true === response.success) {\n            response.images.forEach(item => {\n              $(`#variation_gallery_${response.variation_id} .variation_gallery__images`).append(\n              `<li\n                id=\"variation_${response.variation_id}_image_${item.image_id}\"\n                class=\"variation_gallery__image\"\n                data-image_id=\"${item.image_id}\"\n                data-variation_id=\"${response.variation_id}\"\n              >\n                <img src=\"${item.thumbnail_url}\" />\n              </li>`);\n            });\n          }\n          else {\n            console.error(response.data);\n          }\n        }\n      });\n\n    });\n\n    // Now display the actual file_frame\n    file_frame.open();\n  }\n\n  $('#woocommerce-product-data').on('woocommerce_variations_loaded', function () {\n    // Adds one or more images to the variation gallery.\n    $('.variation_gallery').on('click', '.variation_gallery__add-image', function () {\n      const variation_id = $(this).data('variation_id');\n      // Appends a temporary placeholder image.\n      $(`#variation_gallery_${variation_id} .variation_gallery__images`).append(\n        '<li class=\"variation_gallery__image variation_gallery__image--placeholder\"></li>'\n      );\n\n      // Display the media uploader.\n      renderMediaUploader(variation_id);\n    });\n\n    // Removes an image from the variation gallery.\n    $('.variation_gallery').on('click', '.variation_gallery__image', function () {\n      const $this = $(this);\n\n      if (\n        $this.hasClass('variation_gallery__placeholder') ||\n        $this.hasClass('disabled')\n      ) {\n        return;\n      }\n\n      $this.css('opacity', '0.3');\n      $this.addClass('disabled');\n\n      $.ajax({\n        type: 'post',\n        dataType: 'json',\n        url: gallerya_admin.ajaxurl,\n        data: {\n          action: 'gallerya_remove_variation_image',\n          nonce: gallerya_admin.nonce,\n          variation_id: $this.data('variation_id'),\n          image_id: $this.data('image_id'),\n        },\n        success: function (response) {\n          if (response && true === response.success) {\n            $(`#variation_${response.variation_id}_image_${response.image_id}`).remove();\n          }\n          else {\n            console.error(response.data);\n          }\n        }\n      });\n    });\n  });\n\n})(jQuery);\n"],"sourceRoot":"assets/scripts/"}